/*!
    @page flexcan_mpc5746c_group FlexCAN MPC5746C
    @brief Demo application showing the FlexCAN functionalities
    ## Application description ##
    _____
    The purpose of this demo application is to show you the usage of the FlexCAN module from the MPC5746C CPU using the S32 SDK API and FreeRTOS.
     - In the first part, the application will setup the board clocks and pins.
     - Then it will configure the FlexCAN module features such as Bitrate and Message buffers
     - It will then create two FreeRTOS tasks, one for receiving frames and one for sending frames.
     - The two user buttons are used to toggle the LEDs of the receiving board.
     - Pressing SW3 button of board 1 shall trigger a CAN transfer that results in toggling the DS2 led on board 2.
     - Pressing SW4 button of board 1 shall trigger a CAN transfer that results in toggling the DS3 led on board 2.
     - This demo application requires two boards, one configured as master and the other one configured as slave (see MASTER/SLAVE defines in application code).
    ## Prerequisites ##
    _____
    To run the example you will need to have the following items:
    - 2 MPC5746C boards (\b *)
    - 2 Power Adapters 12V
    - 3 Dupont male to male cable
    - 1 Personal Computer
    - 1 PEmicro Debugger
    <b>(*) MPC5746C boards need a 120 Î© termination resistors for FlexCAN. This resistor must be placed between CAN_H and CAN_L signal wires.
    If you place multiple devices along the cable, only the devices on the ends of the cable need termination resistors.</b>
    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - MPC574xG-MB
    ## Hardware Wiring ##
    _____
    The following connections must be done to for this example application to work:
    PIN FUNCTION          |   MPC574xC-MB
    ----------------------|--------------
    CAN HIGH (\b *)       | CAN HIGH - P15.1
    CAN LOW (\b *)        | CAN LOW - P15.2
    GND (\b GND)          | GND - P15.3
    USER_LED (\b LED0)    | USER_LED DS2 - wired on the board
    USER_LED (\b LED1)    | USER_LED DS3 - wired on the board
    User Switch 3         | SW3 - wired on board
    User Switch 4         | SW4 - wired on board
    <b>(*) Those lines must be modulated using a transceiver, if it is not specified the boards already include the CAN transceiver</b>
    ## How to run ##
    _____
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b flexcan_mpc5746c. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b flexcan_mpc5746c). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be two debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b flexcan_mpc5746c_debug_ram_pemicro | Debug the RAM configuration using PEMicro debuggers
     \b flexcan_mpc5746c_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.
    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
*/
