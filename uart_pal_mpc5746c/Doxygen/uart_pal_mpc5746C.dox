/*!
    @page uart_pal_mpc5746c_group UART PAL MPC5746C
    @brief Driver example showing the UART functionality implemented over LINFlexD peripheral.
    ## Application description ##
    _____
    The purpose of this example is to highlight the usage of UART Peripheral Abstraction Layer implemented over LINFlexD module on MPC5746C CPU using the S32 SDK API.
    The board sends a welcome message to the console with further instructions.
    If 'Hello!' string is sent from the console, the board will reply with 'Hello World!'; when any other string is sent from the console, it will be echoed back.
    ## Prerequisites ##
    _____
    To run the example you will need to have the following items:
    - 1 MPC5746C board (validation board)
    - 1 Power Adapters 12V (for validation board)
    - 1 USB type B cable (for validation board)
    - 1 Personal Computer
    - 1 PEmicro Debugger (for validation board)
    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - MPC574xG-MB (validation board)
    ## Hardware Wiring ##
    _____
    It uses LINFlexD instance 2, which is internally connected to the serial-to-USB module on the board.
    For validation board, the USB type-B cable must be connected to P17 port, while for EVB the uUSB cable will be connected to J1 OpenSDA connector.
    A terminal interface (termite/putty etc) needs to be opened on the host computer and connected to the USB port communicating with the board.
    The following connections must be done to for this example application to work:
    PIN FUNCTION   |  MPC574XG-MB
    ---------------|-----------------------------------------
         PC9       |  USB-RS232 - LINFlexD RX (J16 connected)
         PC8       |  USB-RS232 - LINFlexD TX (J16 connected)
    ## How to run ##
    _____
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b uart_pal_mpc5746c. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b uart_pal_mpc5746c). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be two debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b uart_pal_mpc5746c_debug_ram_pemicro | Debug the RAM configuration using PEMicro debuggers
     \b uart_pal_mpc5746c_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.
    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
    ## Notes ##
    ______
    For this example it is necessary to open a terminal emulator and configure it with:
    -   9600 baud
    -   One stop bit
    -   No parity
    -   No flow control
    -   '\\n' line ending
*/
