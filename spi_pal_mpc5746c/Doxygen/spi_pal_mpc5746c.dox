/*!
    @page spi_pal_mpc5746c_group SPI PAL MPC5746C
    @brief Driver example showing the SPI PAL functionalities
    
    ## Application description ##
    _____
    The purpose of this driver example is to show you the usage of the SPI PAL module from the MPC5746C CPU using the S32 SDK API.
     - In the first part, the application will setup the board clocks, pins and the SPI PAL module.
     - Then it will send 10 spi frames
     - Check the frames received by master and slave.
     - If transfer is successful DS2 LED is on, otherwise DS3 LED is on.

    ## Prerequisites ##
    _____
    To run the example you will need to have the following items:
    - 1 MPC5746C board
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 1 Personal Computer
    - 1 PEmicro Debugger (optional, users can use Open SDA)
    - 4 Dupont male to male cable
	
    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - MPC574xG-MB
    
    The following connections must be done to for this example application to work:

	PIN FUNCTION    |   MPC574xG-MB
  ------------------|--------------------
	  CS - SS       |	PA[15] - PI[15]
	   Clock        |   PA[14] - PF[7]
	MISO - MISO     |   PA[13] - PI[14]
	MOSI - MOSI     |	PA[12] - PJ[1]

    ## How to run ##
    _____
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b spi_pal_mpc5746c. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b spi_pal_mpc5746c). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png). 
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be two debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b spi_pal_mpc5746c_debug_ram_pemicro | Debug the RAM configuration using PEMicro debuggers 
     \b spi_pal_mpc5746c_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers 
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.
    
    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
    

*/

